version: 2.1

orbs:
  win: circleci/windows@2.2.0

jobs:
  build_cboard:
    machine: # executor type
      image: ubuntu-2004:202010-01
    working_directory: ~/repo
    steps:
      - checkout
      - run: 
          name: Install node and yarn
          command: |
            sudo apt update
            sudo apt install nodejs
            sudo apt install npm
            sudo apt install yarn
      - run: 
          name: Sync cboard module 
          command: |
            git submodule sync
            git submodule update --init
      - run:
          name: Install cboard
          command: |
            export NODE_OPTIONS=--max-old-space-size=8192
            cd cboard
            git checkout master 
            git pull
            yarn install
      - run:
          name: Replace cboard files 
          command: |
            cd cboard
            sudo sed -i 's+"homepage": "https://app.cboard.io",+"homepage": ".",+g' package.json
            sudo sed -i 's+<meta charset="utf-8">+<meta charset="utf-8"><script src="cordova.js"></script>+g' public/index.html
      - run:
          name: Build cboard
          command: |
            export NODE_OPTIONS=--max-old-space-size=8192
            cd cboard
            npm run build
      - persist_to_workspace:
          root: cboard
          paths:
            - build/*
      - run:
          name: Generate zip file
          command: |
            cd cboard 
            zip build.zip -r build
      - store_artifacts:
          path: ./cboard/build.zip
      - store_artifacts:
          path: ./cboard/package.json
      - store_artifacts:
          path: ./cboard/public/index.html
                

  build_android:
    docker:
      - image: circleci/android:api-29-node
    working_directory: ~/repo
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - run: 
          name: Install gradle
          command: |
            wget https://services.gradle.org/distributions/gradle-6.8.1-bin.zip -P /tmp
            sudo unzip -d /opt/gradle /tmp/gradle-*.zip
            echo 'export GRADLE_HOME=/opt/gradle/gradle-6.8.1' >> $BASH_ENV
            echo 'export PATH=$PATH:/opt/gradle/gradle-6.8.1/bin' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Install Cordova
          command: |
            sudo npm install -g cordova
            mkdir www
            mkdir /tmp/workspace
      - run:
          name: Install dependencias 
          command: |
            yarn install --cache-folder ~/.cache/yarn
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Copy Build
          command: |
            cp -R /tmp/workspace/build/. www
            ls -a www
      - run:
          name: Install jdk 8 
          command: |
            echo "deb http://security.debian.org/debian-security stretch/updates main" | sudo tee -a /etc/apt/sources.list
            sudo apt-get update
            sudo apt-get install openjdk-8-jdk
      - run:
          name: Build Android 
          command: |
            export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
            export PATH=$JAVA_HOME/bin:$PATH
            sudo update-alternatives --set java /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
            cordova platform add android --noresources
            cordova build android --release --verbose
            cordova build android --verbose
            cp platforms/android/app/build/outputs/apk/release/app-release-unsigned.apk ccboard.apk
            sudo /usr/lib/jvm/java-8-openjdk-amd64/bin/jarsigner -storepass $KEYPASS -verbose -sigalg SHA1withRSA -digestalg SHA1 -keystore ccboard.keystore ccboard.apk ccboard
            sudo /opt/android/sdk/build-tools/29.0.0/zipalign -v 4 ./ccboard.apk ./cboard.apk
            mkdir -p /tmp/apk
            cp -r cboard.apk /tmp/apk
            cp -r platforms/android/app/build/outputs/apk/debug/app-debug.apk /tmp/apk
      - store_artifacts:
          path: /tmp/apk
          destination: apks
  build_electron:
    executor:
      name: win/default
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Install cordova
          command: |
            npm install -g cordova
            mkdir www
            mkdir -p ./tmp/workspace
      - run:
          name: Install dependecies
          command: |
            npm i
      - attach_workspace:
          at: ./tmp/workspace
      - run:
          name: Copy Build
          command: |
            Copy-Item ./tmp/workspace/build/* ./www -recurse
            "{0:N2}" -f ((Get-ChildItem -path ./www -recurse | Measure-Object -property length -sum ).sum /1MB) + " MB"
            Get-ChildItem ./www
            Get-ChildItem .
      - run:
          name: Add Electron Platform
          command: |
            cordova platform add electron@2.0.0 --noresources
      - run:
          name: Build Electron App
          command: |
            cordova build electron --release 
            mkdir ./tmp/exe
            Copy-Item ./platforms/electron/build/*.exe ./tmp/exe
            cordova build electron --debug
            Get-ChildItem ./platforms/electron/build/*.exe | Rename-Item -NewName { $_.BaseName + ' - Debug' + $_.Extension}
            Copy-Item ./platforms/electron/build/*.exe ./tmp/exe
      - store_artifacts:
          path: ./tmp/exe

      
workflows:
  version: 2.1
  build_cordova:
    jobs:
      - build_cboard:
          context: ccboard
          filters:
            branches:
              only: 
                - master
      - build_android:
          context: ccboard
          requires:
            - build_cboard
          filters:
            branches:
              only: 
                - master
      - build_electron:
          context: ccboard
          requires:
            - build_cboard
          filters:
            branches:
              only: 
                - master
